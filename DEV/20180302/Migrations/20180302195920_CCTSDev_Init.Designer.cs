// <auto-generated />
using System;
using AspNetCoreWebAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;

namespace AspNetCoreWebAPI.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20180302195920_CCTSDev_Init")]
    partial class CCTSDev_Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreWebAPI.Entities.QItem", b =>
                {
                    b.Property<int>("QItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreatedBy");

                    b.Property<bool?>("DisplayAsTextBox");

                    b.Property<string>("ItemNumberDisplayText")
                        .HasMaxLength(20);

                    b.Property<string>("ItemNumberText")
                        .HasMaxLength(50);

                    b.Property<int>("QItemSortId");

                    b.Property<string>("QItemText")
                        .HasMaxLength(1500);

                    b.Property<int>("QuestionId");

                    b.Property<string>("ShortenedText")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.HasKey("QItemId");

                    b.HasIndex("QuestionId");

                    b.ToTable("QItem","test");
                });

            modelBuilder.Entity("AspNetCoreWebAPI.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CloseDate");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(3000);

                    b.Property<string>("Instructions")
                        .HasMaxLength(3000);

                    b.Property<bool>("IsLocked");

                    b.Property<bool?>("IsReported");

                    b.Property<string>("LeaverYear")
                        .HasMaxLength(7);

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("OpenDate");

                    b.Property<string>("SchoolYear")
                        .HasMaxLength(7);

                    b.Property<string>("SurveyTypeCode")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Survey");
                });

            modelBuilder.Entity("AspNetCoreWebAPI.Entities.SurveyQuestion", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Instructions")
                        .HasMaxLength(2000);

                    b.Property<bool?>("IsRequired");

                    b.Property<string>("LeaverYear")
                        .HasMaxLength(7);

                    b.Property<int>("PageId");

                    b.Property<string>("PageName")
                        .HasMaxLength(500);

                    b.Property<decimal?>("PageSortId");

                    b.Property<string>("QuestionGroupId")
                        .HasMaxLength(50);

                    b.Property<string>("QuestionNumberText")
                        .HasMaxLength(50);

                    b.Property<decimal?>("QuestionSortId");

                    b.Property<string>("QuestionTypeCode")
                        .HasMaxLength(10);

                    b.Property<int>("SurveyId");

                    b.Property<string>("SurveyName")
                        .HasMaxLength(500);

                    b.Property<string>("SurveyTypeCode")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasMaxLength(1500);

                    b.Property<bool?>("Visible");

                    b.HasKey("QuestionId");

                    b.ToTable("SurveyQuestion","test");
                });

            modelBuilder.Entity("AspNetCoreWebAPI.Entities.SurveyQuestionDetail", b =>
                {
                    b.Property<int>("SurveyId");

                    b.Property<int>("PageId");

                    b.Property<int>("QuestionId");

                    b.Property<string>("Instructions")
                        .HasMaxLength(2000);

                    b.Property<bool?>("IsRequired");

                    b.Property<string>("LeaverYear")
                        .HasMaxLength(7);

                    b.Property<string>("PageName")
                        .HasMaxLength(500);

                    b.Property<decimal?>("PageSortId");

                    b.Property<string>("QuestionGroupId")
                        .HasMaxLength(50);

                    b.Property<string>("QuestionNumberText")
                        .HasMaxLength(50);

                    b.Property<decimal?>("QuestionSortId");

                    b.Property<string>("QuestionTypeCode")
                        .HasMaxLength(10);

                    b.Property<string>("SurveyName")
                        .HasMaxLength(500);

                    b.Property<string>("SurveyTypeCode")
                        .HasMaxLength(50);

                    b.Property<string>("Text")
                        .HasMaxLength(1500);

                    b.Property<bool?>("Visible");

                    b.HasKey("SurveyId", "PageId", "QuestionId");

                    b.ToTable("SurveyQuestionDetail","test");
                });

            modelBuilder.Entity("AspNetCoreWebAPI.Entities.QItem", b =>
                {
                    b.HasOne("AspNetCoreWebAPI.Entities.SurveyQuestion", "SurveyQuestion")
                        .WithMany("QItem")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
